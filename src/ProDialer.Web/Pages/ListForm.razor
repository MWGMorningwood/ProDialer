@page "/lists/create"
@page "/lists/{ListId:int}/edit"
@using ProDialer.Shared.DTOs
@inject HttpClient Http
@inject NavigationManager Navigation

<PageTitle>@(IsEditMode ? "Edit List" : "Create List") - ProDialer</PageTitle>

<div class="container-fluid">
    <div class="row justify-content-center">
        <div class="col-12 col-xl-10">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h4 class="mb-0">@(IsEditMode ? "Edit List" : "Create New List")</h4>
                    <div class="btn-group btn-group-sm" role="group">
                        <button type="button" class="btn @(activeTab == "basic" ? "btn-primary" : "btn-outline-primary")" @onclick="@(() => SetActiveTab("basic"))">
                            Basic Settings
                        </button>
                        <button type="button" class="btn @(activeTab == "calling" ? "btn-primary" : "btn-outline-primary")" @onclick="@(() => SetActiveTab("calling"))">
                            Calling Rules
                        </button>
                        <button type="button" class="btn @(activeTab == "advanced" ? "btn-primary" : "btn-outline-primary")" @onclick="@(() => SetActiveTab("advanced"))">
                            Advanced Features
                        </button>
                        <button type="button" class="btn @(activeTab == "forms" ? "btn-primary" : "btn-outline-primary")" @onclick="@(() => SetActiveTab("forms"))">
                            Web Forms
                        </button>
                        <button type="button" class="btn @(activeTab == "transfer" ? "btn-primary" : "btn-outline-primary")" @onclick="@(() => SetActiveTab("transfer"))">
                            Transfer Config
                        </button>
                    </div>
                </div>
                <div class="card-body">
                    @if (errorMessage != null)
                    {
                        <div class="alert alert-danger" role="alert">
                            @errorMessage
                        </div>
                    }

                    <EditForm Model="listDto" OnValidSubmit="HandleSubmit">
                        <DataAnnotationsValidator />

                        <!-- Basic Settings Tab -->
                        <div class="tab-content" style="display: @(activeTab == "basic" ? "block" : "none")">
                            <h5 class="mb-3 text-primary">Basic List Information</h5>
                            <ValidationSummary class="text-danger" />

                            <div class="row">
                                <div class="col-md-6">
                                    <InputGroup 
                                        Label="List Name" 
                                        Required="true"
                                        @bind-TextValue="listDto.Name" 
                                        ValidationFor="@(() => listDto.Name)" />
                                </div>
                                <div class="col-md-6">
                                    <InputGroup 
                                        Label="Priority" 
                                        InputType="InputGroup.InputGroupType.Number"
                                        @bind-NumberValue="listDto.Priority" 
                                        Min="1" Max="10"
                                        HelpText="Priority level (1-10, higher = more important)" />
                                </div>
                            </div>

                            <InputGroup 
                                Label="Description" 
                                InputType="InputGroup.InputGroupType.TextArea"
                                @bind-TextValue="listDto.Description" 
                                Rows="3"
                                ValidationFor="@(() => listDto.Description)" />

                            <div class="row">
                                <div class="col-md-4">
                                    <InputGroup 
                                        Label="Call Strategy" 
                                        InputType="InputGroup.InputGroupType.Select"
                                        @bind-TextValue="listDto.CallStrategy"
                                        Options="@CallStrategyOptions" 
                                        HelpText="How leads are selected from this list" />
                                </div>
                                <div class="col-md-4">
                                    <InputGroup 
                                        Label="Source" 
                                        InputType="InputGroup.InputGroupType.Select"
                                        @bind-TextValue="listDto.Source"
                                        Options="@SourceOptions" />
                                </div>
                                <div class="col-md-4">
                                    <InputGroup 
                                        Label="Mix Ratio" 
                                        InputType="InputGroup.InputGroupType.Text"
                                        @bind-TextValue="listMixRatioText"
                                        HelpText="Weight for list mixing (1.0 = normal)" />
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <InputGroup 
                                        Label="Source Reference" 
                                        @bind-TextValue="listDto.SourceReference"
                                        HelpText="Reference ID or external identifier" />
                                </div>
                                <div class="col-md-6">
                                    <InputGroup 
                                        Label="Tags" 
                                        @bind-TextValue="listDto.Tags"
                                        HelpText="Comma-separated tags for organization" />
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <InputGroup 
                                        Label="List is Active" 
                                        InputType="InputGroup.InputGroupType.Checkbox"
                                        @bind-BoolValue="listDto.IsActive"
                                        CheckboxInline="false" />
                                </div>
                                <div class="col-md-6">
                                    <InputGroup 
                                        Label="Expiration Date" 
                                        InputType="InputGroup.InputGroupType.Date"
                                        @bind-DateValue="listDto.ExpirationDate"
                                        HelpText="Optional expiration date for the list" />
                                </div>
                            </div>
                        </div>

                        <!-- Calling Rules Tab -->
                        <div class="tab-content" style="display: @(activeTab == "calling" ? "block" : "none")">
                            <h5 class="mb-3 text-primary">Calling Rules & Overrides</h5>

                            <div class="row">
                                <div class="col-md-4">
                                    <InputGroup 
                                        Label="Max Call Attempts" 
                                        InputType="InputGroup.InputGroupType.Number"
                                        @bind-NullableNumberValue="listDto.MaxCallAttempts" 
                                        Min="1" Max="20"
                                        HelpText="Override campaign setting (leave empty for default)" />
                                </div>
                                <div class="col-md-4">
                                    <InputGroup 
                                        Label="Min Call Interval (min)" 
                                        InputType="InputGroup.InputGroupType.Number"
                                        @bind-NullableNumberValue="listDto.MinCallInterval" 
                                        Min="1" Max="10080"
                                        HelpText="Minutes between calls to same lead" />
                                </div>
                                <div class="col-md-4">
                                    <InputGroup 
                                        Label="Reset Time" 
                                        @bind-TextValue="listDto.ResetTime" 
                                        HelpText="Time when list resets (HH:MM format)" />
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-4">
                                    <InputGroup 
                                        Label="Duplicate Check Method" 
                                        InputType="InputGroup.InputGroupType.Select"
                                        @bind-TextValue="listDto.DuplicateCheckMethod"
                                        Options="@DuplicateCheckOptions" />
                                </div>
                            </div>

                            <h6 class="mt-4 mb-3">Time Zone & Calling Hours Override</h6>
                            <div class="row">
                                <div class="col-md-3">
                                    <InputGroup 
                                        Label="Time Zone Override" 
                                        InputType="InputGroup.InputGroupType.Select"
                                        @bind-TextValue="listDto.TimeZoneOverride"
                                        Options="@TimeZoneOptions" />
                                </div>
                                <div class="col-md-3">
                                    <InputGroup 
                                        Label="Call Start Time" 
                                        @bind-TextValue="listDto.CallStartTimeOverride"
                                        HelpText="Format: HH:MM (24-hour)" />
                                </div>
                                <div class="col-md-3">
                                    <InputGroup 
                                        Label="Call End Time" 
                                        @bind-TextValue="listDto.CallEndTimeOverride"
                                        HelpText="Format: HH:MM (24-hour)" />
                                </div>
                                <div class="col-md-3">
                                    <InputGroup 
                                        Label="Timezone Method" 
                                        InputType="InputGroup.InputGroupType.Select"
                                        @bind-TextValue="listDto.TimezoneMethod"
                                        Options="@TimezoneMethodOptions" />
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <InputGroup 
                                        Label="Allowed Days Override" 
                                        @bind-TextValue="listDto.AllowedDaysOverride"
                                        HelpText="Comma-separated: Monday,Tuesday,Wednesday,Thursday,Friday" />
                                </div>
                                <div class="col-md-6">
                                    <InputGroup 
                                        Label="Local Call Time" 
                                        @bind-TextValue="listDto.LocalCallTime"
                                        HelpText="Local calling time rules" />
                                </div>
                            </div>
                        </div>

                        <!-- Advanced Features Tab -->
                        <div class="tab-content" style="display: @(activeTab == "advanced" ? "block" : "none")">
                            <h5 class="mb-3 text-primary">Advanced Features</h5>

                            <div class="row">
                                <div class="col-md-6">
                                    <InputGroup 
                                        Label="Script ID" 
                                        @bind-TextValue="listDto.ScriptId"
                                        HelpText="Agent script override for this list" />
                                </div>
                                <div class="col-md-6">
                                    <InputGroup 
                                        Label="Caller ID Override" 
                                        @bind-TextValue="listDto.CampaignCallerIdOverride"
                                        HelpText="Override campaign caller ID for this list" />
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <InputGroup 
                                        Label="Custom Field Settings" 
                                        InputType="InputGroup.InputGroupType.Checkbox"
                                        @bind-BoolValue="listDto.CustomFieldsCopy"
                                        CheckboxLabel="Allow Custom Fields Copy"
                                        HelpText="Allow copying custom fields between leads" />
                                </div>
                                <div class="col-md-6">
                                    <InputGroup 
                                        Label="Custom Field Modification" 
                                        InputType="InputGroup.InputGroupType.Checkbox"
                                        @bind-BoolValue="listDto.CustomFieldsModify"
                                        CheckboxLabel="Allow Custom Fields Modify"
                                        HelpText="Allow agents to modify custom fields" />
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <InputGroup 
                                        Label="Lead Call Count" 
                                        InputType="InputGroup.InputGroupType.Checkbox"
                                        @bind-BoolValue="listDto.ResetLeadCalledCount"
                                        CheckboxLabel="Reset Lead Called Count"
                                        HelpText="Reset call count when recycling leads" />
                                </div>
                                <div class="col-md-6">
                                    <InputGroup 
                                        Label="Reset Time" 
                                        @bind-TextValue="listDto.ResetTime"
                                        HelpText="Daily reset time (HH:MM format)" />
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <InputGroup 
                                        Label="Answering Machine Message" 
                                        @bind-TextValue="listDto.AnsweringMachineMessage"
                                        HelpText="Custom AMD message for this list" />
                                </div>
                                <div class="col-md-6">
                                    <InputGroup 
                                        Label="Drop In Group" 
                                        @bind-TextValue="listDto.DropInGroup"
                                        HelpText="Group for dropped calls" />
                                </div>
                            </div>

                            <InputGroup 
                                Label="Phone Validation Settings" 
                                InputType="InputGroup.InputGroupType.TextArea"
                                @bind-TextValue="listDto.PhoneValidationSettings"
                                Rows="3"
                                HelpText="JSON configuration for phone validation rules" />

                            <InputGroup 
                                Label="Custom Fields Schema" 
                                InputType="InputGroup.InputGroupType.TextArea"
                                @bind-TextValue="listDto.CustomFieldsSchema"
                                Rows="4"
                                HelpText="JSON configuration for custom fields schema" />
                        </div>

                        <!-- Web Forms Tab -->
                        <div class="tab-content" style="display: @(activeTab == "forms" ? "block" : "none")">
                            <h5 class="mb-3 text-primary">Web Form Configuration</h5>

                            <InputGroup 
                                Label="Primary Web Form Address" 
                                @bind-TextValue="listDto.WebFormAddress"
                                HelpText="URL for primary web form integration" />

                            <InputGroup 
                                Label="Secondary Web Form Address" 
                                @bind-TextValue="listDto.WebFormAddress2"
                                HelpText="URL for secondary web form integration" />

                            <InputGroup 
                                Label="Tertiary Web Form Address" 
                                @bind-TextValue="listDto.WebFormAddress3"
                                HelpText="URL for tertiary web form integration" />

                            <InputGroup 
                                Label="Agent Script Override" 
                                InputType="InputGroup.InputGroupType.TextArea"
                                @bind-TextValue="listDto.AgentScriptOverride"
                                Rows="5"
                                HelpText="Custom agent script content for this list" />
                        </div>

                        <!-- Transfer Configuration Tab -->
                        <div class="tab-content" style="display: @(activeTab == "transfer" ? "block" : "none")">
                            <h5 class="mb-3 text-primary">Transfer Configuration</h5>

                            <InputGroup 
                                Label="Outbound Caller ID" 
                                @bind-TextValue="listDto.OutboundCallerId"
                                HelpText="Caller ID for outbound transfers" />

                            <div class="row">
                                <div class="col-md-6">
                                    <InputGroup 
                                        Label="Transfer Conference 1" 
                                        @bind-TextValue="listDto.TransferConf1" />
                                </div>
                                <div class="col-md-6">
                                    <InputGroup 
                                        Label="Transfer Conference 2" 
                                        @bind-TextValue="listDto.TransferConf2" />
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <InputGroup 
                                        Label="Transfer Conference 3" 
                                        @bind-TextValue="listDto.TransferConf3" />
                                </div>
                                <div class="col-md-6">
                                    <InputGroup 
                                        Label="Transfer Conference 4" 
                                        @bind-TextValue="listDto.TransferConf4" />
                                </div>
                            </div>

                            <InputGroup 
                                Label="Transfer Conference 5" 
                                @bind-TextValue="listDto.TransferConf5" />
                        </div>

                        <hr class="my-4" />

                        <div class="d-flex gap-2">
                            <button type="submit" class="btn btn-primary" disabled="@isSubmitting">
                                @if (isSubmitting)
                                {
                                    <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                                }
                                @(IsEditMode ? "Update List" : "Create List")
                            </button>
                            <button type="button" class="btn btn-outline-secondary" @onclick="GoBack">
                                Cancel
                            </button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public int? ListId { get; set; }

    private CreateListDto listDto = new CreateListDto();
    private string? errorMessage;
    private bool isSubmitting = false;
    private string activeTab = "basic";

    private bool IsEditMode => ListId.HasValue;

    protected override async Task OnInitializedAsync()
    {
        if (IsEditMode)
        {
            await LoadList();
        }
        else
        {
            // Set defaults for new list
            listDto = new CreateListDto
            {
                Priority = 5,
                MaxCallAttempts = 3,
                CallStrategy = "Sequential",
                IsActive = true,
                Source = "Manual",
                ListMixRatio = 1.0m,
                DuplicateCheckMethod = "PHONE",
                CustomFieldsModify = true,
                ResetLeadCalledCount = true,
                TimezoneMethod = "COUNTRY_AND_AREA_CODE"
            };
        }
    }

    private void SetActiveTab(string tabName)
    {
        activeTab = tabName;
    }

    private async Task LoadList()
    {
        try
        {
            var list = await Http.GetFromJsonAsync<ListDto>($"api/lists/{ListId}");
            if (list != null)
            {
                // Map all fields from ListDto to CreateListDto
                listDto = new CreateListDto
                {
                    Name = list.Name,
                    Description = list.Description,
                    Priority = list.Priority,
                    CallStrategy = list.CallStrategy,
                    MaxCallAttempts = list.MaxCallAttempts,
                    MinCallInterval = list.MinCallInterval,
                    TimeZoneOverride = list.TimeZoneOverride,
                    CallStartTimeOverride = list.CallStartTimeOverride,
                    CallEndTimeOverride = list.CallEndTimeOverride,
                    AllowedDaysOverride = list.AllowedDaysOverride,
                    IsActive = list.IsActive,
                    Source = list.Source,
                    SourceReference = list.SourceReference,
                    CustomFieldsSchema = list.CustomFieldsSchema,
                    Tags = list.Tags,
                    ScriptId = list.ScriptId,
                    AgentScriptOverride = list.AgentScriptOverride,
                    CampaignCallerIdOverride = list.CampaignCallerIdOverride,
                    ListMixRatio = list.ListMixRatio,
                    DuplicateCheckMethod = list.DuplicateCheckMethod,
                    CustomFieldsCopy = list.CustomFieldsCopy,
                    CustomFieldsModify = list.CustomFieldsModify,
                    ResetLeadCalledCount = list.ResetLeadCalledCount,
                    PhoneValidationSettings = list.PhoneValidationSettings,
                    AnsweringMachineMessage = list.AnsweringMachineMessage,
                    DropInGroup = list.DropInGroup,
                    WebFormAddress = list.WebFormAddress,
                    WebFormAddress2 = list.WebFormAddress2,
                    WebFormAddress3 = list.WebFormAddress3,
                    ResetTime = list.ResetTime,
                    TimezoneMethod = list.TimezoneMethod,
                    LocalCallTime = list.LocalCallTime,
                    ExpirationDate = list.ExpirationDate,
                    OutboundCallerId = list.OutboundCallerId,
                    TransferConf1 = list.TransferConf1,
                    TransferConf2 = list.TransferConf2,
                    TransferConf3 = list.TransferConf3,
                    TransferConf4 = list.TransferConf4,
                    TransferConf5 = list.TransferConf5
                };
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Failed to load list: {ex.Message}";
        }
    }

    private async Task HandleSubmit()
    {
        try
        {
            isSubmitting = true;
            errorMessage = null;

            if (IsEditMode)
            {
                // Map all fields from CreateListDto to UpdateListDto
                var updateDto = new UpdateListDto
                {
                    Id = ListId!.Value,
                    Name = listDto.Name,
                    Description = listDto.Description,
                    Priority = listDto.Priority,
                    CallStrategy = listDto.CallStrategy,
                    MaxCallAttempts = listDto.MaxCallAttempts,
                    MinCallInterval = listDto.MinCallInterval,
                    TimeZoneOverride = listDto.TimeZoneOverride,
                    CallStartTimeOverride = listDto.CallStartTimeOverride,
                    CallEndTimeOverride = listDto.CallEndTimeOverride,
                    AllowedDaysOverride = listDto.AllowedDaysOverride,
                    IsActive = listDto.IsActive,
                    Source = listDto.Source,
                    SourceReference = listDto.SourceReference,
                    CustomFieldsSchema = listDto.CustomFieldsSchema,
                    Tags = listDto.Tags,
                    ScriptId = listDto.ScriptId,
                    AgentScriptOverride = listDto.AgentScriptOverride,
                    CampaignCallerIdOverride = listDto.CampaignCallerIdOverride,
                    ListMixRatio = listDto.ListMixRatio,
                    DuplicateCheckMethod = listDto.DuplicateCheckMethod,
                    CustomFieldsCopy = listDto.CustomFieldsCopy,
                    CustomFieldsModify = listDto.CustomFieldsModify,
                    ResetLeadCalledCount = listDto.ResetLeadCalledCount,
                    PhoneValidationSettings = listDto.PhoneValidationSettings,
                    AnsweringMachineMessage = listDto.AnsweringMachineMessage,
                    DropInGroup = listDto.DropInGroup,
                    WebFormAddress = listDto.WebFormAddress,
                    WebFormAddress2 = listDto.WebFormAddress2,
                    WebFormAddress3 = listDto.WebFormAddress3,
                    ResetTime = listDto.ResetTime,
                    TimezoneMethod = listDto.TimezoneMethod,
                    LocalCallTime = listDto.LocalCallTime,
                    ExpirationDate = listDto.ExpirationDate,
                    OutboundCallerId = listDto.OutboundCallerId,
                    TransferConf1 = listDto.TransferConf1,
                    TransferConf2 = listDto.TransferConf2,
                    TransferConf3 = listDto.TransferConf3,
                    TransferConf4 = listDto.TransferConf4,
                    TransferConf5 = listDto.TransferConf5
                };

                var response = await Http.PutAsJsonAsync($"api/lists/{ListId}", updateDto);
                response.EnsureSuccessStatusCode();
            }
            else
            {
                var response = await Http.PostAsJsonAsync("api/lists", listDto);
                response.EnsureSuccessStatusCode();
            }

            Navigation.NavigateTo("/lists");
        }
        catch (Exception ex)
        {
            errorMessage = $"Failed to save list: {ex.Message}";
        }
        finally
        {
            isSubmitting = false;
        }
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/lists");
    }

    // Option lists for InputGroup components
    private List<InputGroup.SelectOption> CallStrategyOptions => new()
    {
        new() { Value = "Sequential", Text = "Sequential" },
        new() { Value = "Random", Text = "Random" },
        new() { Value = "Priority", Text = "Priority-based" }
    };

    private List<InputGroup.SelectOption> SourceOptions => new()
    {
        new() { Value = "Manual", Text = "Manual Entry" },
        new() { Value = "Import", Text = "Data Import" },
        new() { Value = "API", Text = "API Integration" },
        new() { Value = "Web", Text = "Web Form" },
        new() { Value = "Partner", Text = "Partner Feed" }
    };

    private List<InputGroup.SelectOption> DuplicateCheckOptions => new()
    {
        new() { Value = "PHONE", Text = "Phone Number" },
        new() { Value = "EMAIL", Text = "Email Address" },
        new() { Value = "PHONE_EMAIL", Text = "Phone and Email" },
        new() { Value = "CUSTOM", Text = "Custom Field" },
        new() { Value = "NONE", Text = "No Duplicate Check" }
    };

    private List<InputGroup.SelectOption> TimeZoneOptions => new()
    {
        new() { Value = "", Text = "Use Campaign Setting" },
        new() { Value = "UTC", Text = "UTC" },
        new() { Value = "America/New_York", Text = "Eastern Time" },
        new() { Value = "America/Chicago", Text = "Central Time" },
        new() { Value = "America/Denver", Text = "Mountain Time" },
        new() { Value = "America/Los_Angeles", Text = "Pacific Time" }
    };

    private List<InputGroup.SelectOption> TimezoneMethodOptions => new()
    {
        new() { Value = "COUNTRY_AND_AREA_CODE", Text = "Country & Area Code" },
        new() { Value = "POSTAL_CODE", Text = "Postal Code" },
        new() { Value = "OWNER_TIME_ZONE_CODE", Text = "Owner Timezone" },
        new() { Value = "PHONE_CODE", Text = "Phone Code" }
    };

    // Helper property for decimal to string conversion
    private string listMixRatioText
    {
        get => listDto.ListMixRatio.ToString();
        set 
        { 
            if (decimal.TryParse(value, out var result))
                listDto.ListMixRatio = result;
            else
                listDto.ListMixRatio = 1.0m;
        }
    }
}
